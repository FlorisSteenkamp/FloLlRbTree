var FloLlRbTree=function(t){var e={};function r(u){if(e[u])return e[u].exports;var a=e[u]={i:u,l:!1,exports:{}};return t[u].call(a.exports,a,a.exports,r),a.l=!0,a.exports}return r.m=t,r.c=e,r.d=function(t,e,u){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:u})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var u=Object.create(null);if(r.r(u),Object.defineProperty(u,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var a in t)r.d(u,a,function(e){return t[e]}.bind(null,a));return u},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=1)}([function(t,e,r){"use strict";var u;Object.defineProperty(e,"__esModule",{value:!0}),function(t){t[t.BLACK=0]="BLACK",t[t.RED=1]="RED"}(u||(u={})),e.default=u},function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const u=r(2),a=r(0),l=r(3);function o(t){return t&&t.color===a.default.RED}function n(t,e){let r=e.indexOf(t);-1!==r&&e.splice(r,1)}function f(t,e){const r=t?l.default.LEFT:l.default.RIGHT,u=e[r];return e[r]=u[t],u[t]&&(u[t].parent=e),u[t]=e,e.parent=u,u.color=e.color,e.color=a.default.RED,u}function d(t){return t===a.default.RED?a.default.BLACK:a.default.RED}function i(t){t.color=d(t.color),t[l.default.LEFT].color=d(t[l.default.LEFT].color),t[l.default.RIGHT].color=d(t[l.default.RIGHT].color)}function c(t){if(i(t),o(t[l.default.RIGHT][l.default.LEFT])){let e=f(l.default.RIGHT,t[l.default.RIGHT]);t[l.default.RIGHT]=e,e.parent=t,i(t=f(l.default.LEFT,t))}return t}function T(t){return o(t[l.default.RIGHT])&&(t=f(l.default.LEFT,t)),o(t[l.default.LEFT])&&o(t[l.default.LEFT][l.default.LEFT])&&(t=f(l.default.RIGHT,t)),o(t[l.default.LEFT])&&o(t[l.default.RIGHT])&&i(t),t}e.default=class{constructor(t,e,r){this.getMinNode=this.getMinOrMaxNode(l.default.LEFT),this.getMaxNode=this.getMinOrMaxNode(l.default.RIGHT);const u=this;if(u.setComparator(t,r),u.replaceDups=r,u.root=null,e)for(let t of e)u.insert(t)}setComparator(t,e){this.compare=e?t:(e,r)=>t(e,r[0])}isEmpty(){return!this.root}find(t){const e=this;let r=this.root;for(;r;){let u=e.compare(t,r.data);if(0===u)return r;r=r[u>0?l.default.RIGHT:l.default.LEFT]}return null}toArrayInOrder(){let t=[];return function e(r){if(!r)return;e(r[l.default.LEFT]),t.push(r),e(r[l.default.RIGHT])}(this.root),t}insert(t){const e=this;e.root=function t(r,a){if(!r)return new u.default(a,!e.replaceDups);let n=e.compare(a,r.data);if(0===n)e.replaceDups?r.data=a:r.data.push(a);else{let e=n>0?l.default.RIGHT:l.default.LEFT;r[e]=t(r[e],a),r[e].parent=r}o(r[l.default.RIGHT])&&!o(r[l.default.LEFT])&&(r=f(l.default.LEFT,r));o(r[l.default.LEFT])&&o(r[l.default.LEFT][l.default.LEFT])&&(r=f(l.default.RIGHT,r));o(r[l.default.LEFT])&&o(r[l.default.RIGHT])&&i(r);return r}(e.root,t),e.root.color=a.default.BLACK,e.root.parent=void 0}remove(t,e){const r=this;r.root=function t(u,a){let d=r.compare(a,u.data);if(!r.replaceDups&&0===d&&!e&&u.data.length>1)return n(a,u.data),u;if(d<0&&!u[l.default.LEFT]||d>0&&!u[l.default.RIGHT])return u;if(d<0)return o(u[l.default.LEFT])||o(u[l.default.LEFT][l.default.LEFT])||(u=c(u)),u[l.default.LEFT]=t(u[l.default.LEFT],a),u[l.default.LEFT]&&(u[l.default.LEFT].parent=u),T(u);if(o(u[l.default.LEFT])&&(u=f(l.default.RIGHT,u),d=r.compare(a,u.data),!r.replaceDups&&0===d&&!e&&u.data.length>1))return n(a,u.data),u;if(0===d&&!u[l.default.RIGHT])return null;if(!o(u[l.default.RIGHT])&&!o(u[l.default.RIGHT][l.default.LEFT])&&(u=function(t){i(t),o(t[l.default.LEFT][l.default.LEFT])&&i(t=f(l.default.RIGHT,t));return t}(u),d=r.compare(a,u.data),!r.replaceDups&&0===d&&!e&&u.data.length>1))return n(a,u.data),u;0===d?(u.data=r.min(u[l.default.RIGHT]),u[l.default.RIGHT]=function t(e){if(!e[l.default.LEFT])return null;o(e[l.default.LEFT])||o(e[l.default.LEFT][l.default.LEFT])||(e=c(e));e[l.default.LEFT]=t(e[l.default.LEFT]),e[l.default.LEFT]&&(e[l.default.LEFT].parent=e);return T(e)}(u[l.default.RIGHT])):u[l.default.RIGHT]=t(u[l.default.RIGHT],a);u[l.default.RIGHT]&&(u[l.default.RIGHT].parent=u);return T(u)}(r.root,t),r.root&&(r.root.color=a.default.BLACK,r.root.parent=void 0)}findBounds(t){const e=this;let r=e.root,u=[void 0,void 0];if(null===r)return u;for(;r;){const a=e.compare(t,r.data);a>=0?u[0]=r:u[1]=r,r=r[a>=0?l.default.RIGHT:l.default.LEFT]}return u}findBoundsExcl(t){const e=this;let r=e.root,u=[void 0,void 0];if(null===r)return u;return function r(a){for(;a;){let o=e.compare(t,a.data);if(0===o)return r(a[l.default.LEFT]),void r(a[l.default.RIGHT]);o>0?u[0]=a:o<0&&(u[1]=a),a=a[o>0?l.default.RIGHT:l.default.LEFT]}}(r),u}findAllInOrder(t){const e=this;let r=[];return function u(a){for(;a;){let o=e.compare(t,a.data);if(0===o)return u(a[l.default.LEFT]),r.push(a),void u(a[l.default.RIGHT]);a=a[o>0?l.default.RIGHT:l.default.LEFT]}}(e.root),r}getMinOrMaxNode(t){return function(e){if(e){for(;e[t];)e=e[t];return e}}}min(t){return this.getMinNode(t).data}max(t){return this.getMaxNode(t).data}}},function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const u=r(0);e.default=class{constructor(t,e){this.data=e?[t]:t,this.color=u.default.RED}}},function(t,e,r){"use strict";var u;Object.defineProperty(e,"__esModule",{value:!0}),function(t){t[t.LEFT=0]="LEFT",t[t.RIGHT=1]="RIGHT"}(u||(u={})),e.default=u}]);